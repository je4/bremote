// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewClientParam struct {
	Client               string           `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Status               string           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	HttpAddr             string           `protobuf:"bytes,3,opt,name=httpAddr,proto3" json:"httpAddr,omitempty"`
	Type                 ProxySessionType `protobuf:"varint,4,opt,name=type,proto3,enum=info_age.bremote.ProxySessionType" json:"type,omitempty"`
	Initialize           bool             `protobuf:"varint,5,opt,name=initialize,proto3" json:"initialize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewClientParam) Reset()         { *m = NewClientParam{} }
func (m *NewClientParam) String() string { return proto.CompactTextString(m) }
func (*NewClientParam) ProtoMessage()    {}
func (*NewClientParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

func (m *NewClientParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientParam.Unmarshal(m, b)
}
func (m *NewClientParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientParam.Marshal(b, m, deterministic)
}
func (m *NewClientParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientParam.Merge(m, src)
}
func (m *NewClientParam) XXX_Size() int {
	return xxx_messageInfo_NewClientParam.Size(m)
}
func (m *NewClientParam) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientParam.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientParam proto.InternalMessageInfo

func (m *NewClientParam) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

func (m *NewClientParam) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NewClientParam) GetHttpAddr() string {
	if m != nil {
		return m.HttpAddr
	}
	return ""
}

func (m *NewClientParam) GetType() ProxySessionType {
	if m != nil {
		return m.Type
	}
	return ProxySessionType_Undefined
}

func (m *NewClientParam) GetInitialize() bool {
	if m != nil {
		return m.Initialize
	}
	return false
}

type TemplateList struct {
	Template             []string `protobuf:"bytes,1,rep,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TemplateList) Reset()         { *m = TemplateList{} }
func (m *TemplateList) String() string { return proto.CompactTextString(m) }
func (*TemplateList) ProtoMessage()    {}
func (*TemplateList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

func (m *TemplateList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateList.Unmarshal(m, b)
}
func (m *TemplateList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateList.Marshal(b, m, deterministic)
}
func (m *TemplateList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateList.Merge(m, src)
}
func (m *TemplateList) XXX_Size() int {
	return xxx_messageInfo_TemplateList.Size(m)
}
func (m *TemplateList) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateList.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateList proto.InternalMessageInfo

func (m *TemplateList) GetTemplate() []string {
	if m != nil {
		return m.Template
	}
	return nil
}

type NewClientResult struct {
	Initialized          bool     `protobuf:"varint,1,opt,name=initialized,proto3" json:"initialized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewClientResult) Reset()         { *m = NewClientResult{} }
func (m *NewClientResult) String() string { return proto.CompactTextString(m) }
func (*NewClientResult) ProtoMessage()    {}
func (*NewClientResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

func (m *NewClientResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewClientResult.Unmarshal(m, b)
}
func (m *NewClientResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewClientResult.Marshal(b, m, deterministic)
}
func (m *NewClientResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewClientResult.Merge(m, src)
}
func (m *NewClientResult) XXX_Size() int {
	return xxx_messageInfo_NewClientResult.Size(m)
}
func (m *NewClientResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NewClientResult.DiscardUnknown(m)
}

var xxx_messageInfo_NewClientResult proto.InternalMessageInfo

func (m *NewClientResult) GetInitialized() bool {
	if m != nil {
		return m.Initialized
	}
	return false
}

func init() {
	proto.RegisterType((*NewClientParam)(nil), "info_age.bremote.NewClientParam")
	proto.RegisterType((*TemplateList)(nil), "info_age.bremote.TemplateList")
	proto.RegisterType((*NewClientResult)(nil), "info_age.bremote.NewClientResult")
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_ed7f10298fa1d90f) }

var fileDescriptor_ed7f10298fa1d90f = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xb5, 0x9b, 0x50, 0xa5, 0xd3, 0xa8, 0x84, 0x3d, 0x14, 0xcb, 0x48, 0xc5, 0xec, 0x01, 0x45,
	0x48, 0xb8, 0x52, 0x2b, 0x71, 0xe2, 0x42, 0xaa, 0x0a, 0x0e, 0x80, 0x22, 0xa7, 0x12, 0x12, 0x17,
	0xb4, 0x76, 0xa6, 0x66, 0x85, 0xbd, 0x6b, 0xed, 0x4e, 0x02, 0xe6, 0xbb, 0xf8, 0x3a, 0x4e, 0xc8,
	0x76, 0xe2, 0x98, 0x5a, 0xc9, 0xf1, 0xcd, 0x3c, 0xbd, 0x7d, 0x6f, 0xe7, 0xc1, 0x24, 0xd1, 0x8a,
	0x8c, 0xce, 0x32, 0x34, 0x61, 0x61, 0x34, 0x69, 0x36, 0x91, 0xea, 0x5e, 0x7f, 0x13, 0x29, 0x86,
	0xb1, 0xc1, 0x5c, 0x13, 0xfa, 0xcf, 0x52, 0xad, 0xd3, 0x0c, 0x2f, 0xeb, 0x7d, 0xbc, 0xba, 0xbf,
	0xc4, 0xbc, 0xa0, 0xb2, 0xa1, 0xfb, 0xa7, 0x54, 0x16, 0x68, 0x1b, 0xc0, 0xff, 0xb8, 0x70, 0xf6,
	0x19, 0x7f, 0xde, 0x64, 0x12, 0x15, 0xcd, 0x85, 0x11, 0x39, 0x3b, 0x87, 0xe3, 0xa4, 0x86, 0x9e,
	0x1b, 0xb8, 0xd3, 0x93, 0x68, 0x83, 0xaa, 0xb9, 0x25, 0x41, 0x2b, 0xeb, 0x1d, 0x35, 0xf3, 0x06,
	0x31, 0x1f, 0x46, 0xdf, 0x89, 0x8a, 0x77, 0xcb, 0xa5, 0xf1, 0x06, 0xf5, 0xa6, 0xc5, 0xec, 0x0d,
	0x0c, 0xab, 0xd7, 0xbc, 0x61, 0xe0, 0x4e, 0xcf, 0xae, 0x78, 0xf8, 0xd0, 0x69, 0x38, 0x37, 0xfa,
	0x57, 0xb9, 0x40, 0x6b, 0xa5, 0x56, 0x77, 0x65, 0x81, 0x51, 0xcd, 0x67, 0x17, 0x00, 0x52, 0x49,
	0x92, 0x22, 0x93, 0xbf, 0xd1, 0x7b, 0x14, 0xb8, 0xd3, 0x51, 0xd4, 0x99, 0xf0, 0x57, 0x30, 0xbe,
	0xc3, 0xbc, 0xc8, 0x04, 0xe1, 0x47, 0x69, 0xa9, 0xf2, 0x40, 0x1b, 0xec, 0xb9, 0xc1, 0xa0, 0xf2,
	0xb0, 0xc5, 0xfc, 0x1a, 0x1e, 0xb7, 0x09, 0x23, 0xb4, 0xab, 0x8c, 0x58, 0x00, 0xa7, 0x3b, 0xb1,
	0x65, 0x9d, 0x73, 0x14, 0x75, 0x47, 0x57, 0x7f, 0x8f, 0xe0, 0xc9, 0x4d, 0xfb, 0xd1, 0x0b, 0x34,
	0x6b, 0x99, 0x20, 0x7b, 0x0b, 0xc3, 0xb9, 0x54, 0x29, 0xf3, 0xfa, 0x41, 0x16, 0x64, 0xa4, 0x4a,
	0xfd, 0xbd, 0x1b, 0xee, 0xb0, 0x08, 0x4e, 0x5a, 0x23, 0x2c, 0xe8, 0x13, 0xff, 0xbf, 0x83, 0xff,
	0xe2, 0x00, 0xa3, 0xc9, 0xc1, 0x1d, 0x36, 0x83, 0x71, 0x84, 0xb9, 0x5e, 0xe3, 0x46, 0x76, 0xbf,
	0xb3, 0xf3, 0xb0, 0x29, 0x45, 0xb8, 0x2d, 0x45, 0x78, 0x5b, 0x95, 0x82, 0x3b, 0xec, 0x16, 0x26,
	0x5f, 0x30, 0xb6, 0x3a, 0xf9, 0x81, 0xf4, 0x09, 0xad, 0x15, 0x29, 0xb2, 0xa7, 0x7d, 0x9d, 0x59,
	0x49, 0x68, 0x0f, 0xc8, 0x7c, 0x80, 0xf1, 0x7b, 0xa4, 0xed, 0x59, 0x2c, 0xdb, 0xc3, 0xf4, 0x2f,
	0xfa, 0xd2, 0xdd, 0x5b, 0x72, 0x67, 0xf6, 0x12, 0x9e, 0x2b, 0xa4, 0x9a, 0xf6, 0xba, 0x4b, 0xdb,
	0x35, 0xff, 0xeb, 0x40, 0x14, 0x32, 0x3e, 0xae, 0x95, 0xaf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x8a, 0x5f, 0x53, 0x1e, 0x13, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerServiceClient is the client API for ControllerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerServiceClient interface {
	Ping(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	NewClient(ctx context.Context, in *NewClientParam, opts ...grpc.CallOption) (*NewClientResult, error)
	RemoveClient(ctx context.Context, in *String, opts ...grpc.CallOption) (*empty.Empty, error)
	WebsocketMessage(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*empty.Empty, error)
	GetTemplates(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TemplateList, error)
}

type controllerServiceClient struct {
	cc *grpc.ClientConn
}

func NewControllerServiceClient(cc *grpc.ClientConn) ControllerServiceClient {
	return &controllerServiceClient{cc}
}

func (c *controllerServiceClient) Ping(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ControllerService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) NewClient(ctx context.Context, in *NewClientParam, opts ...grpc.CallOption) (*NewClientResult, error) {
	out := new(NewClientResult)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ControllerService/NewClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) RemoveClient(ctx context.Context, in *String, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ControllerService/RemoveClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) WebsocketMessage(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ControllerService/WebsocketMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) GetTemplates(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TemplateList, error) {
	out := new(TemplateList)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ControllerService/GetTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServiceServer is the server API for ControllerService service.
type ControllerServiceServer interface {
	Ping(context.Context, *String) (*String, error)
	NewClient(context.Context, *NewClientParam) (*NewClientResult, error)
	RemoveClient(context.Context, *String) (*empty.Empty, error)
	WebsocketMessage(context.Context, *Bytes) (*empty.Empty, error)
	GetTemplates(context.Context, *empty.Empty) (*TemplateList, error)
}

// UnimplementedControllerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServiceServer struct {
}

func (*UnimplementedControllerServiceServer) Ping(ctx context.Context, req *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedControllerServiceServer) NewClient(ctx context.Context, req *NewClientParam) (*NewClientResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewClient not implemented")
}
func (*UnimplementedControllerServiceServer) RemoveClient(ctx context.Context, req *String) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveClient not implemented")
}
func (*UnimplementedControllerServiceServer) WebsocketMessage(ctx context.Context, req *Bytes) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WebsocketMessage not implemented")
}
func (*UnimplementedControllerServiceServer) GetTemplates(ctx context.Context, req *empty.Empty) (*TemplateList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTemplates not implemented")
}

func RegisterControllerServiceServer(s *grpc.Server, srv ControllerServiceServer) {
	s.RegisterService(&_ControllerService_serviceDesc, srv)
}

func _ControllerService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ControllerService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).Ping(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_NewClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewClientParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).NewClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ControllerService/NewClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).NewClient(ctx, req.(*NewClientParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_RemoveClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).RemoveClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ControllerService/RemoveClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).RemoveClient(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_WebsocketMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).WebsocketMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ControllerService/WebsocketMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).WebsocketMessage(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_GetTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).GetTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ControllerService/GetTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).GetTemplates(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControllerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "info_age.bremote.ControllerService",
	HandlerType: (*ControllerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ControllerService_Ping_Handler,
		},
		{
			MethodName: "NewClient",
			Handler:    _ControllerService_NewClient_Handler,
		},
		{
			MethodName: "RemoveClient",
			Handler:    _ControllerService_RemoveClient_Handler,
		},
		{
			MethodName: "WebsocketMessage",
			Handler:    _ControllerService_WebsocketMessage_Handler,
		},
		{
			MethodName: "GetTemplates",
			Handler:    _ControllerService_GetTemplates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller.proto",
}
