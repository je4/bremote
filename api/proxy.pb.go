// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InitParam struct {
	Instance             string           `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	SessionType          ProxySessionType `protobuf:"varint,2,opt,name=sessionType,proto3,enum=info_age.bremote.ProxySessionType" json:"sessionType,omitempty"`
	Status               string           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InitParam) Reset()         { *m = InitParam{} }
func (m *InitParam) String() string { return proto.CompactTextString(m) }
func (*InitParam) ProtoMessage()    {}
func (*InitParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{0}
}

func (m *InitParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitParam.Unmarshal(m, b)
}
func (m *InitParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitParam.Marshal(b, m, deterministic)
}
func (m *InitParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitParam.Merge(m, src)
}
func (m *InitParam) XXX_Size() int {
	return xxx_messageInfo_InitParam.Size(m)
}
func (m *InitParam) XXX_DiscardUnknown() {
	xxx_messageInfo_InitParam.DiscardUnknown(m)
}

var xxx_messageInfo_InitParam proto.InternalMessageInfo

func (m *InitParam) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *InitParam) GetSessionType() ProxySessionType {
	if m != nil {
		return m.SessionType
	}
	return ProxySessionType_Undefined
}

func (m *InitParam) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ProxyClientList struct {
	Clients              []*ProxyClient `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ProxyClientList) Reset()         { *m = ProxyClientList{} }
func (m *ProxyClientList) String() string { return proto.CompactTextString(m) }
func (*ProxyClientList) ProtoMessage()    {}
func (*ProxyClientList) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{1}
}

func (m *ProxyClientList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyClientList.Unmarshal(m, b)
}
func (m *ProxyClientList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyClientList.Marshal(b, m, deterministic)
}
func (m *ProxyClientList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyClientList.Merge(m, src)
}
func (m *ProxyClientList) XXX_Size() int {
	return xxx_messageInfo_ProxyClientList.Size(m)
}
func (m *ProxyClientList) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyClientList.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyClientList proto.InternalMessageInfo

func (m *ProxyClientList) GetClients() []*ProxyClient {
	if m != nil {
		return m.Clients
	}
	return nil
}

type GetClientsParam struct {
	WithStatus           bool     `protobuf:"varint,1,opt,name=withStatus,proto3" json:"withStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClientsParam) Reset()         { *m = GetClientsParam{} }
func (m *GetClientsParam) String() string { return proto.CompactTextString(m) }
func (*GetClientsParam) ProtoMessage()    {}
func (*GetClientsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{2}
}

func (m *GetClientsParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientsParam.Unmarshal(m, b)
}
func (m *GetClientsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientsParam.Marshal(b, m, deterministic)
}
func (m *GetClientsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientsParam.Merge(m, src)
}
func (m *GetClientsParam) XXX_Size() int {
	return xxx_messageInfo_GetClientsParam.Size(m)
}
func (m *GetClientsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientsParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientsParam proto.InternalMessageInfo

func (m *GetClientsParam) GetWithStatus() bool {
	if m != nil {
		return m.WithStatus
	}
	return false
}

type GroupInstanceMessage struct {
	Group                string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Instance             string   `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupInstanceMessage) Reset()         { *m = GroupInstanceMessage{} }
func (m *GroupInstanceMessage) String() string { return proto.CompactTextString(m) }
func (*GroupInstanceMessage) ProtoMessage()    {}
func (*GroupInstanceMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{3}
}

func (m *GroupInstanceMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInstanceMessage.Unmarshal(m, b)
}
func (m *GroupInstanceMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInstanceMessage.Marshal(b, m, deterministic)
}
func (m *GroupInstanceMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInstanceMessage.Merge(m, src)
}
func (m *GroupInstanceMessage) XXX_Size() int {
	return xxx_messageInfo_GroupInstanceMessage.Size(m)
}
func (m *GroupInstanceMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInstanceMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInstanceMessage proto.InternalMessageInfo

func (m *GroupInstanceMessage) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *GroupInstanceMessage) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

type GroupListMessage struct {
	Groups               []string `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupListMessage) Reset()         { *m = GroupListMessage{} }
func (m *GroupListMessage) String() string { return proto.CompactTextString(m) }
func (*GroupListMessage) ProtoMessage()    {}
func (*GroupListMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{4}
}

func (m *GroupListMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupListMessage.Unmarshal(m, b)
}
func (m *GroupListMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupListMessage.Marshal(b, m, deterministic)
}
func (m *GroupListMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupListMessage.Merge(m, src)
}
func (m *GroupListMessage) XXX_Size() int {
	return xxx_messageInfo_GroupListMessage.Size(m)
}
func (m *GroupListMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupListMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GroupListMessage proto.InternalMessageInfo

func (m *GroupListMessage) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

type MemberListMessage struct {
	Instances            []string `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberListMessage) Reset()         { *m = MemberListMessage{} }
func (m *MemberListMessage) String() string { return proto.CompactTextString(m) }
func (*MemberListMessage) ProtoMessage()    {}
func (*MemberListMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_700b50b08ed8dbaf, []int{5}
}

func (m *MemberListMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberListMessage.Unmarshal(m, b)
}
func (m *MemberListMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberListMessage.Marshal(b, m, deterministic)
}
func (m *MemberListMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberListMessage.Merge(m, src)
}
func (m *MemberListMessage) XXX_Size() int {
	return xxx_messageInfo_MemberListMessage.Size(m)
}
func (m *MemberListMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberListMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MemberListMessage proto.InternalMessageInfo

func (m *MemberListMessage) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func init() {
	proto.RegisterType((*InitParam)(nil), "info_age.bremote.InitParam")
	proto.RegisterType((*ProxyClientList)(nil), "info_age.bremote.ProxyClientList")
	proto.RegisterType((*GetClientsParam)(nil), "info_age.bremote.GetClientsParam")
	proto.RegisterType((*GroupInstanceMessage)(nil), "info_age.bremote.GroupInstanceMessage")
	proto.RegisterType((*GroupListMessage)(nil), "info_age.bremote.GroupListMessage")
	proto.RegisterType((*MemberListMessage)(nil), "info_age.bremote.MemberListMessage")
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_700b50b08ed8dbaf) }

var fileDescriptor_700b50b08ed8dbaf = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0x8d, 0x9b, 0x36, 0x5f, 0x3d, 0xfe, 0x44, 0xc2, 0x12, 0x45, 0xc6, 0x05, 0x94, 0x2c, 0x12,
	0x8a, 0x90, 0x70, 0xd5, 0x70, 0xe0, 0x02, 0x87, 0x94, 0xa2, 0x10, 0x44, 0xa5, 0xc8, 0xa9, 0x54,
	0x89, 0x0b, 0xb2, 0xd3, 0xa9, 0x59, 0x11, 0xef, 0x5a, 0xde, 0x4d, 0x21, 0x3f, 0x80, 0x7f, 0xc4,
	0x0f, 0x44, 0x5e, 0xdb, 0x49, 0x6a, 0xe3, 0x9c, 0x38, 0xce, 0xce, 0xbc, 0x37, 0x9e, 0xf7, 0x9e,
	0x0c, 0x56, 0x9c, 0x88, 0x9f, 0x6b, 0x37, 0x4e, 0x84, 0x12, 0xa4, 0xc3, 0xf8, 0xad, 0xf8, 0xea,
	0x87, 0xe8, 0x06, 0x09, 0x46, 0x42, 0xa1, 0x73, 0x12, 0x0a, 0x11, 0x2e, 0xf1, 0x54, 0xf7, 0x83,
	0xd5, 0xed, 0x29, 0x46, 0xb1, 0xca, 0xc7, 0x9d, 0xc7, 0xe5, 0xa6, 0xcf, 0x8b, 0x96, 0xa5, 0xd6,
	0x31, 0xca, 0xac, 0xa0, 0xbf, 0x0c, 0x30, 0xa7, 0x9c, 0xa9, 0x99, 0x9f, 0xf8, 0x11, 0x71, 0xe0,
	0x98, 0x71, 0xa9, 0x7c, 0xbe, 0x40, 0xdb, 0xe8, 0x1b, 0x43, 0xd3, 0xdb, 0xd4, 0xe4, 0x02, 0x2c,
	0x89, 0x52, 0x32, 0xc1, 0xaf, 0xd6, 0x31, 0xda, 0x07, 0x7d, 0x63, 0xf8, 0x60, 0x44, 0xdd, 0xf2,
	0x67, 0xb9, 0xb3, 0xf4, 0xa3, 0xe7, 0xdb, 0x49, 0x6f, 0x17, 0x46, 0x7a, 0xd0, 0x92, 0xca, 0x57,
	0x2b, 0x69, 0x37, 0x35, 0x7f, 0x5e, 0xd1, 0x4f, 0xd0, 0xd6, 0xc0, 0xf7, 0x4b, 0x86, 0x5c, 0x7d,
	0x66, 0x52, 0x91, 0x37, 0xf0, 0xdf, 0x42, 0x57, 0xd2, 0x36, 0xfa, 0xcd, 0xa1, 0x35, 0x7a, 0x5a,
	0xb3, 0x2c, 0xc3, 0x78, 0xc5, 0x34, 0x3d, 0x83, 0xf6, 0x04, 0x55, 0xf6, 0x2a, 0xb3, 0xc3, 0x9e,
	0x01, 0xfc, 0x60, 0xea, 0xdb, 0x3c, 0x5b, 0x9d, 0x9e, 0x76, 0xec, 0xed, 0xbc, 0xd0, 0x8f, 0xd0,
	0x9d, 0x24, 0x62, 0x15, 0x4f, 0xf3, 0x6b, 0x2f, 0x51, 0x4a, 0x3f, 0x44, 0xd2, 0x85, 0xa3, 0x30,
	0x7d, 0xcf, 0xd5, 0xc8, 0x8a, 0x7b, 0x32, 0x1d, 0xdc, 0x97, 0x89, 0xbe, 0x84, 0x8e, 0x66, 0x4a,
	0x4f, 0x28, 0x58, 0x7a, 0xd0, 0xd2, 0xc0, 0xec, 0x10, 0xd3, 0xcb, 0x2b, 0x7a, 0x06, 0x0f, 0x2f,
	0x31, 0x0a, 0x30, 0xd9, 0x1d, 0x7e, 0x02, 0x66, 0x41, 0x56, 0xcc, 0x6f, 0x1f, 0x46, 0xbf, 0x8f,
	0xe0, 0xff, 0x5c, 0xe1, 0xe4, 0x8e, 0x2d, 0x90, 0xbc, 0x85, 0xc3, 0x19, 0xe3, 0x21, 0xb1, 0xab,
	0xe2, 0xcc, 0x55, 0xc2, 0x78, 0xe8, 0xd4, 0x76, 0x68, 0x83, 0xbc, 0x83, 0xc3, 0xd4, 0x7d, 0x72,
	0x52, 0x9d, 0xd9, 0xa4, 0xc2, 0xe9, 0xb9, 0x59, 0x98, 0xdc, 0x22, 0x4c, 0xee, 0x87, 0x34, 0x69,
	0xb4, 0x41, 0x3c, 0x80, 0xad, 0xd2, 0x64, 0x50, 0x25, 0x29, 0xf9, 0xe0, 0x0c, 0xf6, 0x5a, 0xa8,
	0x6d, 0x9f, 0x82, 0xb9, 0x11, 0x90, 0xd4, 0xac, 0x76, 0xfe, 0x92, 0xbb, 0xb2, 0xea, 0xb4, 0x41,
	0xae, 0x72, 0x2f, 0xc6, 0x37, 0x37, 0x85, 0xb1, 0xe4, 0x45, 0x0d, 0xb2, 0xe4, 0xfc, 0x9e, 0xa3,
	0xaf, 0xe1, 0x91, 0x46, 0x78, 0x18, 0x89, 0x3b, 0xfc, 0x87, 0xc4, 0x1e, 0xb4, 0x35, 0x62, 0x82,
	0x2a, 0x8b, 0x85, 0xdc, 0xe3, 0xea, 0xf3, 0x6a, 0xa7, 0x92, 0x25, 0xda, 0x20, 0x63, 0xb0, 0x34,
	0xe7, 0x05, 0x2e, 0x51, 0xe1, 0x1e, 0xbe, 0xfa, 0xcf, 0x3a, 0x87, 0xce, 0x35, 0x06, 0x73, 0xb1,
	0xf8, 0x8e, 0x9b, 0x90, 0x76, 0x2b, 0xd3, 0x63, 0xbe, 0xae, 0xe7, 0x38, 0x1f, 0x80, 0xc3, 0x51,
	0xe9, 0xe5, 0xaf, 0x76, 0x97, 0xeb, 0x3f, 0xdc, 0x97, 0xa6, 0x1f, 0xb3, 0xa0, 0xa5, 0x41, 0xaf,
	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x2a, 0x66, 0xc8, 0xf6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyServiceClient is the client API for ProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyServiceClient interface {
	Ping(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error)
	Init(ctx context.Context, in *InitParam, opts ...grpc.CallOption) (*empty.Empty, error)
	GetClients(ctx context.Context, in *GetClientsParam, opts ...grpc.CallOption) (*ProxyClientList, error)
	GroupList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GroupListMessage, error)
	GroupAddInstance(ctx context.Context, in *GroupInstanceMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	GroupRemoveInstance(ctx context.Context, in *GroupInstanceMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	GroupGetMembers(ctx context.Context, in *String, opts ...grpc.CallOption) (*MemberListMessage, error)
	GroupDelete(ctx context.Context, in *String, opts ...grpc.CallOption) (*empty.Empty, error)
	WebSocketMessage(ctx context.Context, in *any.Any, opts ...grpc.CallOption) (*empty.Empty, error)
}

type proxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewProxyServiceClient(cc *grpc.ClientConn) ProxyServiceClient {
	return &proxyServiceClient{cc}
}

func (c *proxyServiceClient) Ping(ctx context.Context, in *String, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) Init(ctx context.Context, in *InitParam, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GetClients(ctx context.Context, in *GetClientsParam, opts ...grpc.CallOption) (*ProxyClientList, error) {
	out := new(ProxyClientList)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GetClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GroupList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GroupListMessage, error) {
	out := new(GroupListMessage)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GroupList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GroupAddInstance(ctx context.Context, in *GroupInstanceMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GroupAddInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GroupRemoveInstance(ctx context.Context, in *GroupInstanceMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GroupRemoveInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GroupGetMembers(ctx context.Context, in *String, opts ...grpc.CallOption) (*MemberListMessage, error) {
	out := new(MemberListMessage)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GroupGetMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) GroupDelete(ctx context.Context, in *String, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/GroupDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyServiceClient) WebSocketMessage(ctx context.Context, in *any.Any, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/info_age.bremote.ProxyService/WebSocketMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServiceServer is the server API for ProxyService service.
type ProxyServiceServer interface {
	Ping(context.Context, *String) (*String, error)
	Init(context.Context, *InitParam) (*empty.Empty, error)
	GetClients(context.Context, *GetClientsParam) (*ProxyClientList, error)
	GroupList(context.Context, *empty.Empty) (*GroupListMessage, error)
	GroupAddInstance(context.Context, *GroupInstanceMessage) (*empty.Empty, error)
	GroupRemoveInstance(context.Context, *GroupInstanceMessage) (*empty.Empty, error)
	GroupGetMembers(context.Context, *String) (*MemberListMessage, error)
	GroupDelete(context.Context, *String) (*empty.Empty, error)
	WebSocketMessage(context.Context, *any.Any) (*empty.Empty, error)
}

// UnimplementedProxyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyServiceServer struct {
}

func (*UnimplementedProxyServiceServer) Ping(ctx context.Context, req *String) (*String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedProxyServiceServer) Init(ctx context.Context, req *InitParam) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedProxyServiceServer) GetClients(ctx context.Context, req *GetClientsParam) (*ProxyClientList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClients not implemented")
}
func (*UnimplementedProxyServiceServer) GroupList(ctx context.Context, req *empty.Empty) (*GroupListMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupList not implemented")
}
func (*UnimplementedProxyServiceServer) GroupAddInstance(ctx context.Context, req *GroupInstanceMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupAddInstance not implemented")
}
func (*UnimplementedProxyServiceServer) GroupRemoveInstance(ctx context.Context, req *GroupInstanceMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupRemoveInstance not implemented")
}
func (*UnimplementedProxyServiceServer) GroupGetMembers(ctx context.Context, req *String) (*MemberListMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupGetMembers not implemented")
}
func (*UnimplementedProxyServiceServer) GroupDelete(ctx context.Context, req *String) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupDelete not implemented")
}
func (*UnimplementedProxyServiceServer) WebSocketMessage(ctx context.Context, req *any.Any) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WebSocketMessage not implemented")
}

func RegisterProxyServiceServer(s *grpc.Server, srv ProxyServiceServer) {
	s.RegisterService(&_ProxyService_serviceDesc, srv)
}

func _ProxyService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).Ping(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).Init(ctx, req.(*InitParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GetClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientsParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GetClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GetClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GetClients(ctx, req.(*GetClientsParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GroupList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GroupList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GroupList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GroupList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GroupAddInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupInstanceMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GroupAddInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GroupAddInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GroupAddInstance(ctx, req.(*GroupInstanceMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GroupRemoveInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupInstanceMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GroupRemoveInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GroupRemoveInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GroupRemoveInstance(ctx, req.(*GroupInstanceMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GroupGetMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GroupGetMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GroupGetMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GroupGetMembers(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_GroupDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).GroupDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/GroupDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).GroupDelete(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProxyService_WebSocketMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(any.Any)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServiceServer).WebSocketMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info_age.bremote.ProxyService/WebSocketMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServiceServer).WebSocketMessage(ctx, req.(*any.Any))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "info_age.bremote.ProxyService",
	HandlerType: (*ProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ProxyService_Ping_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _ProxyService_Init_Handler,
		},
		{
			MethodName: "GetClients",
			Handler:    _ProxyService_GetClients_Handler,
		},
		{
			MethodName: "GroupList",
			Handler:    _ProxyService_GroupList_Handler,
		},
		{
			MethodName: "GroupAddInstance",
			Handler:    _ProxyService_GroupAddInstance_Handler,
		},
		{
			MethodName: "GroupRemoveInstance",
			Handler:    _ProxyService_GroupRemoveInstance_Handler,
		},
		{
			MethodName: "GroupGetMembers",
			Handler:    _ProxyService_GroupGetMembers_Handler,
		},
		{
			MethodName: "GroupDelete",
			Handler:    _ProxyService_GroupDelete_Handler,
		},
		{
			MethodName: "WebSocketMessage",
			Handler:    _ProxyService_WebSocketMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proxy.proto",
}
